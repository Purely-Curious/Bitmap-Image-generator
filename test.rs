use std::{
    fs::{self, File},
    io::{self, Write},
};

const SPRITE_DATA: [u8; 16 * 5] = [
    0xF0, 0x90, 0x90, 0x90, 0xF0,
    0x20, 0x60, 0x20, 0x20, 0x70,
    0xF0, 0x10, 0xF0, 0x80, 0xF0,
    0xF0, 0x10, 0xF0, 0x10, 0xF0,
    0x90, 0x90, 0xF0, 0x10, 0x10,
    0xF0, 0x80, 0xF0, 0x10, 0xF0,
    0xF0, 0x80, 0xF0, 0x90, 0xF0,
    0xF0, 0x10, 0x20, 0x40, 0x40,
    0xF0, 0x90, 0xF0, 0x90, 0xF0,
    0xF0, 0x90, 0xF0, 0x10, 0xF0,
    0xF0, 0x90, 0xF0, 0x90, 0x90,
    0xE0, 0x90, 0xE0, 0x90, 0xE0,
    0xF0, 0x80, 0x80, 0x80, 0xF0,
    0xE0, 0x90, 0x90, 0x90, 0xE0,
    0xF0, 0x80, 0xF0, 0x80, 0xF0,
    0xF0, 0x80, 0xF0, 0x80, 0x80
];

fn set_character(item: Vec<u8>)
{
    let mut present: [[u8; 8]; 5] = [[0; 8]; 5];
    for i in 0..5
    {
        for j in 0..8
        {
            present[i][8-j-1] ^= (item[i] >> j) & 1;
            //println!("{}, {}, {}", i, 8-j-1, i*(7-j));
        }
        println!("{:?}", present[i]);
    }
}

fn main() -> io::Result<()>
{
    let zero = [0xF0,
    0x90,
    0x90,
    0x90,
    0xF0];
    let item = [0xE0,
    0x90,
    0x90,
    0x90,
    0xE0,];
    set_character(zero.to_vec());
    println!();
    set_character(item.to_vec());
    set_character(SPRITE_DATA[0..5].to_vec());
    let mut file = File::create("Test.txt")?;
    let test: u32 = 0;
    file.write(&test.to_be_bytes());
    println!("hello");
    Ok(())
}